# Discord Bot Configuration
DISCORD_BOT_TOKEN=

# Twitch API Configuration
TWITCH_CLIENT_ID=
TWITCH_CLIENT_SECRET=

# Twitch Streamer Configuration
# The username of the Twitch streamer to monitor for live notifications
TWITCH_USERNAME=

# OAuth Configuration (optional, defaults to http://localhost/callback)
REDIRECT_URI=https://9bi.rhamzthev.com/callback

# Stream Notification Configuration (optional, falls back to "general" or "stream-notifications" channel)
# Set this to your Discord channel ID where you want stream notifications to be sent
DISCORD_WELCOME_CHANNEL_ID=

STREAM_NOTIFICATION_CHANNEL_ID=
STREAM_NOTIFICATION_ROLE_ID=

# Server (FastAPI) Configuration
# Host/IP to bind the HTTP/HTTPS servers
FASTAPI_HOST=0.0.0.0
# HTTP port
FASTAPI_PORT=8080

# HTTPS Configuration
# Disabled - Caddy handles SSL termination and certificates automatically
FASTAPI_ENABLE_HTTPS=false
# HTTPS port (not used when HTTPS is disabled)
FASTAPI_SSL_PORT=8443
# Certificate paths (not used - Caddy manages certificates)
FASTAPI_SSL_CERTFILE=
FASTAPI_SSL_KEYFILE=

# Note: Previously used Let's Encrypt directly, now Caddy handles certificates:
# FASTAPI_SSL_CERTFILE=/etc/letsencrypt/live/9bi.rhamzthev.com/fullchain.pem
# FASTAPI_SSL_KEYFILE=/etc/letsencrypt/live/9bi.rhamzthev.com/privkey.pem
FASTAPI_SSL_KEYFILE_PASSWORD=

# Docker Compose variables (used by compose.yaml)
# Docker Hub image coordinates
DOCKERHUB_USERNAME=
DOCKERHUB_REPOSITORY=

# Docker Compose overrides (not read by the app directly)
# Note: CERTS_PATH no longer needed - Caddy manages certificates automatically
# Previously: CERTS_PATH=/etc/letsencrypt/live/9bi.rhamzthev.com/